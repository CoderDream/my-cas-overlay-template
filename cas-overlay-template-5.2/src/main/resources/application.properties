##
# CAS Server Context Configuration
#
server.context-path=/cas
server.port=8443

server.ssl.enabled=true
server.ssl.key-store=file:/home/cas/keystory/itheima
server.ssl.key-store-password=123456
server.ssl.key-password=123456
# server.ssl.ciphers=
# server.ssl.client-auth=
# server.ssl.enabled=
# server.ssl.key-alias=
# server.ssl.key-store-provider=
# server.ssl.key-store-type=
# server.ssl.protocol=
# server.ssl.trust-store=
# server.ssl.trust-store-password=
# server.ssl.trust-store-provider=
# server.ssl.trust-store-type=

server.max-http-header-size=2097152
server.use-forward-headers=true
server.connection-timeout=20000
server.error.include-stacktrace=ALWAYS

server.compression.enabled=true
server.compression.mime-types=application/javascript,application/json,application/xml,text/html,text/xml,text/plain

server.tomcat.max-http-post-size=2097152
server.tomcat.basedir=build/tomcat
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)
server.tomcat.accesslog.suffix=.log
server.tomcat.max-threads=10
server.tomcat.port-header=X-Forwarded-Port
server.tomcat.protocol-header=X-Forwarded-Proto
server.tomcat.protocol-header-https-value=https
server.tomcat.remote-ip-header=X-FORWARDED-FOR
server.tomcat.uri-encoding=UTF-8

spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

##
# CAS Cloud Bus Configuration
#
spring.cloud.bus.enabled=false
# spring.cloud.bus.refresh.enabled=true
# spring.cloud.bus.env.enabled=true
# spring.cloud.bus.destination=CasCloudBus
# spring.cloud.bus.ack.enabled=true

endpoints.enabled=false
endpoints.sensitive=true

endpoints.restart.enabled=false
endpoints.shutdown.enabled=false

management.security.enabled=true
management.security.roles=ACTUATOR,ADMIN
management.security.sessions=if_required
management.context-path=/status
management.add-application-context-header=false

security.basic.authorize-mode=role
security.basic.enabled=false
security.basic.path=/cas/status/**

##
# CAS Web Application Session Configuration
#
server.session.timeout=300
server.session.cookie.http-only=true
server.session.tracking-modes=COOKIE

##
# CAS Thymeleaf View Configuration
#
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=true
spring.thymeleaf.mode=HTML
##
# CAS Log4j Configuration
#
# logging.config=file:/etc/cas/log4j2.xml
server.context-parameters.isLog4jAutoInitializationDisabled=true

##
# CAS AspectJ Configuration
#
spring.aop.auto=true
spring.aop.proxy-target-class=true

##
# CAS Authentication Credentials
#
#cas.authn.accept.users=casuser::Mellon


# cas.authn.ldap[0].principalAttributeList=displayName,givenName
# cas.authn.ldap[0].principalAttributePassword=userPassword
# cas.authn.ldap[0].collectDnAttribute=false
# cas.authn.ldap[0].principalDnAttributeName=principalLdapDn
# cas.authn.ldap[0].allowMultiplePrincipalAttributeValues=true
# cas.authn.ldap[0].allowMissingPrincipalAttributeValue=true
# cas.authn.ldap[0].credentialCriteria=
# cas.authn.attributeRepository.ldap[0].attributes.uid=uid
# cas.authn.attributeRepository.ldap[0].attributes.displayName=displayName
# #cas.authn.attributeRepository.ldap[0].attributes.cn=commonName
# #cas.authn.attributeRepository.ldap[0].attributes.affiliation=groupMembership
# cas.authn.ldap[0].ldapUrl=ldap://ldap1.billjc.com
# cas.authn.ldap[0].bindDn=uid=zimbra,cn=admins,cn=zimbra
# cas.authn.ldap[0].bindCredential=godblessbjc0909!
# cas.authn.ldap[0].poolPassivator=BIND
# cas.authn.ldap[0].connectionStrategy=
# cas.authn.ldap[0].providerClass=org.ldaptive.provider.unboundid.UnboundIDProvider
# cas.authn.ldap[0].connectTimeout=5000
# cas.authn.ldap[0].trustCertificates=
# cas.authn.ldap[0].keystore=
# cas.authn.ldap[0].keystorePassword=
# cas.authn.ldap[0].keystoreType=PKCS12
# cas.authn.ldap[0].minPoolSize=3
# cas.authn.ldap[0].maxPoolSize=10
# cas.authn.ldap[0].validateOnCheckout=true
# cas.authn.ldap[0].validatePeriodically=true
# cas.authn.ldap[0].validatePeriod=500
# cas.authn.ldap[0].validateTimeout=5000
# cas.authn.ldap[0].failFast=true
# cas.authn.ldap[0].idleTime=500
# cas.authn.ldap[0].prunePeriod=24
# cas.authn.ldap[0].blockWaitTime=5000
# cas.authn.ldap[0].useSsl=false
# cas.authn.ldap[0].useStartTls=false
# cas.authn.ldap[0].responseTimeout=8000
# cas.authn.ldap[0].allowMultipleDns=false
# cas.authn.ldap[0].name=
# cas.authn.ldap[0].type=AUTHENTICATED
# cas.authn.ldap[0].searchFilter=uid={user}
# cas.authn.ldap[0].enhanceWithEntryResolver=true
# cas.authn.ldap[0].derefAliases=NEVER
# cas.authn.ldap[0].dnFormat=uid=%s,ou=people,dc=billjc,dc=com
# cas.authn.ldap[0].baseDn=dc=billjc,dc=com

##
# CAS Authentication Credentials
#默认账号密码
#cas.authn.accept.users=casuser::Mellon
###################ldap authentication######################
 cas.authn.ldap[0].type=AUTHENTICATED
 cas.authn.ldap[0].ldapUrl=ldap://172.16.130.169:8080
 cas.authn.ldap[0].useSsl=false
 cas.authn.ldap[0].connectTimeout=5000
 cas.authn.ldap[0].baseDn=ou=student,dc=mylitboy,dc=com
 #使用uid或者mail或者mobile登陆
 cas.authn.ldap[0].userFilter=(|(uid={user})(mail={user})(mobile={user}))
 cas.authn.ldap[0].subtreeSearch=true
 cas.authn.ldap[0].usePasswordPolicy=false
 cas.authn.ldap[0].bindDn=cn=admin,dc=mylitboy,dc=com
 cas.authn.ldap[0].bindCredential=ldap123

 cas.authn.ldap[0].principalAttributeId=uid
 #设置为空，则执行用户简单绑定以验证凭据，就是明文，MD5，sha等密码都能登录
 #设置为userPassword,密码使用sha加密
 cas.authn.ldap[0].principalAttributePassword=userPassword
 cas.authn.ldap[0].principalAttributeList=uid,sn,cn,o,mail,mobile
 cas.authn.ldap[0].allowMultiplePrincipalAttributeValues=true
 cas.authn.ldap[0].allowMultiplePrincipalAttributeValue=true
 ##
 #此处是个坑，开始我以为这里是配置密码加密方式，于是和LDAP里面配置一样的MD5或者SHA，结果一直认证不成功，
 #后来才发现，原来这里是在密码验证之前
 #对密码再做一次encode，如果配置为NONE，则什么都不做，直接使用默认的SHA加密方式（AbstractCompareAuthenticationHandler里面配置）
 #加密密码后与LDAP里面的密码比对，如果配置为DEFAULT则先用配置的#algorithm encode明文一次，再使用默认的
 #SHA加密方式加密后与LDAP里面的密码比对
 #cas.authn.ldap[0].passwordEncoder.type=NONE
 #cas.authn.ldap[0].passwordEncoder.characterEncoding=UTF-8
 #cas.authn.ldap[0].passwordEncoder.encodingAlgorithm=MD5
 cas.authn.ldap[0].enhanceWithEntryResolver=true
 cas.authn.ldap[0].dnFormat=uid=%s,ou=student,dc=mylitboy,dc=com
 #cas.authn.ldap[0].additionalAttributes=
 cas.authn.ldap[0].principalAttributeList=displayName,givenName,mail,sn,cn,commonName,department,title,description,telephoneNumber,physicalDeliveryOfficeName,memberOf
 cas.authn.ldap[0].minPoolSize=3
 cas.authn.ldap[0].maxPoolSize=50
 cas.authn.ldap[0].validateOnCheckout=true
 cas.authn.ldap[0].validatePeriodically=true


##
# CAS Authentication Credentials
#默认账号密码
#cas.authn.accept.users=casuser::Mellon
###################ldap authentication######################
#cas.authn.ldap[0].type=AUTHENTICATED
#cas.authn.ldap[0].ldapUrl=ldap://ldap1.billjc.com
#cas.authn.ldap[0].useSsl=false
#cas.authn.ldap[0].connectTimeout=5000
#cas.authn.ldap[0].baseDn=ou=people,dc=billjc,dc=com
##使用uid或者mail或者mobile登陆
#cas.authn.ldap[0].userFilter=(|(uid={user})(mail={user})(mobile={user}))
#cas.authn.ldap[0].subtreeSearch=true
#cas.authn.ldap[0].usePasswordPolicy=false
#cas.authn.ldap[0].bindDn=uid=zimbra,cn=admins,cn=zimbra
#cas.authn.ldap[0].bindCredential=godblessbjc0909!
#
#cas.authn.ldap[0].principalAttributeId=uid
##设置为空，则执行用户简单绑定以验证凭据，就是明文，MD5，sha等密码都能登录
##设置为userPassword,密码使用sha加密
##cas.authn.ldap[0].principalAttributePassword=userPassword
#cas.authn.ldap[0].principalAttributePassword=
#cas.authn.ldap[0].principalAttributeList=uid,sn,cn,o,mail,mobile
#cas.authn.ldap[0].allowMultiplePrincipalAttributeValues=true
#cas.authn.ldap[0].allowMultiplePrincipalAttributeValue=true
###
##此处是个坑，开始我以为这里是配置密码加密方式，于是和LDAP里面配置一样的MD5或者SHA，结果一直认证不成功，
##后来才发现，原来这里是在密码验证之前
##对密码再做一次encode，如果配置为NONE，则什么都不做，直接使用默认的SHA加密方式（AbstractCompareAuthenticationHandler里面配置）
##加密密码后与LDAP里面的密码比对，如果配置为DEFAULT则先用配置的#algorithm encode明文一次，再使用默认的
##SHA加密方式加密后与LDAP里面的密码比对
##cas.authn.ldap[0].passwordEncoder.type=NONE
##cas.authn.ldap[0].passwordEncoder.characterEncoding=UTF-8
##cas.authn.ldap[0].passwordEncoder.encodingAlgorithm=MD5
#cas.authn.ldap[0].enhanceWithEntryResolver=true
#cas.authn.ldap[0].dnFormat=uid=%s,ou=people,dc=billjc,dc=com
##cas.authn.ldap[0].additionalAttributes=
#cas.authn.ldap[0].principalAttributeList=displayName,givenName,mail,sn,cn,commonName,department,title,description,telephoneNumber,physicalDeliveryOfficeName,memberOf
#cas.authn.ldap[0].minPoolSize=3
#cas.authn.ldap[0].maxPoolSize=50
#cas.authn.ldap[0].validateOnCheckout=true
#cas.authn.ldap[0].validatePeriodically=true

cas.tgc.secure=false
#开启json格式service注册
cas.serviceRegistry.initFromJson=true
# Json services 配置位置设定
cas.serviceRegistry.json.location=classpath:/services

##自定义登陆页
##原cas默认的css样式,如果更改了,某些页面样式将丢失
#cas.standard.css.file=/css/cas.css
##自己的样式
#cas.myself.css=/themes/css/cas.css
#cas.javascript.file=/themes/js/jquery-1.4.2.min.js
#cas.page.title=mythenms
#
#
## 修改默认主题
#cas.theme.defaultThemeName=mythenms